version: '3.3'

services:
  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION}
    command:
      - "--storage.tsdb.path=/data/"
      - "--storage.tsdb.retention.time=30d"
      - "--web.external-url=https://prometheus.conxtor.com"
      - "--web.enable-lifecycle"
      - "--config.file=/etc/prometheus/prometheus.yml"
    restart: unless-stopped
    networks:
      - monitoring
      - traefik
    volumes: 
      - /data/prometheus/config/:/etc/prometheus/
      - /data/prometheus/db:/data
    expose: 
      - 9090
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`${PROMETHEUS_HOSTNAME}`)"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.tls.certresolver=acme"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.middlewares.prometheus.basicauth.users=${PROMETHEUS_AUTH}"
      - "traefik.http.routers.prometheus.middlewares=prometheus@docker"
      - "traefik.docker.network=traefik"
      
  node-exporter:
    image: prom/node-exporter:${NODEEXPORTER_VERSION}
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - monitoring

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:${CADVISOR_VERSION}
    container_name: cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    networks:
      - monitoring
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cadvisor.rule=Host(`${CADVISOR_HOSTNAME}`)"
      - "traefik.http.routers.cadvisor.entrypoints=websecure"
      - "traefik.http.routers.cadvisor.tls.certresolver=acme"
      - "traefik.http.services.cadvisor.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.cadvisor.basicauth.users=${PROMETHEUS_AUTH}"
      - "traefik.http.routers.cadvisor.middlewares=cadvisor@docker"
      - "traefik.docker.network=traefik"
  
  grafana:
    image: grafana/grafana:${GRAFANA_VERSION}
    container_name: grafana
    restart: unless-stopped
    environment: 
      - GF_SECURITY_ADMIN_USERNAME=${GRAFANA_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - /data/grafana/lib:/var/lib/grafana
      - /data/grafana/etc:/etc/grafana
      - /data/grafana/log:/var/log/grafana
    networks:
      - monitoring
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`${GRAFANA_HOSTNAME}`)"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.tls.certresolver=acme"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.docker.network=traefik"
      
networks:
  monitoring: 
    name: monitoring
    external: true
  traefik:
    name: traefik
    external: true